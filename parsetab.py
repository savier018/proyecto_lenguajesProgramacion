
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APOSTROPHE ASSIGN BOOLEAN BREAK CASE CLASS COMMA CONST DAPOSTROPHE DEF DIVIDE DO DOT ELSE ELSIF END EQUAL FALSE FOR GETS GLOBAL_VAR GREATEROREQUAL GREATERTHAN ID IF IN INSTANCE_VAR LBRACE LBRACKET LESSOREQUAL LESSTHAN LPAREN MINUS MOD NIL NONE NOT NOTEQUAL NUMBER OR P PLUS PRINT PUTS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE WHEN WHILEprogram : statement_liststatement_list : statement\n                      | statement statement_liststatement : assign\n                 | impression\n                 | tupla\n                 | conditions\n                 | while_loop\n                 | case\n                 | Sfunction\n                 | array\n                 | p_SfunctionINV\n                 | aritmeticExpresion\n                 | operator\n                 assign : INSTANCE_VAR ASSIGN value\n              | GLOBAL_VAR ASSIGN value\n              value : NUMBER\n            |  STRING\n            |  BOOLEANvalues : value\n              | value COMMA valuesaritmeticExpresion : value operator value operator : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MODarray : LBRACKET RBRACKETarray : LBRACKET values RBRACKETconector : AND\n                | ORoperComp : LESSTHAN\n                | GREATERTHANcondition : value operComp valueconditions : condition\n                  | condition conector conditionswhen : WHEN conditions statement_listwhens : when\n             | whenscase : CASE whens ENDSfunction : DEF ID statement_list ENDp_SfunctionINV : ID\n                      | ID LPAREN RPARENimpression : PRINT LPAREN values RPAREN\n                  | PRINT values\n                  | PUTS values\n                  | PUTS LPAREN values RPAREN\n                  | P LPAREN values RPAREN\n                  | P valueswhile_loop : WHILE condition DO statement_list ENDtupla : LPAREN values RPAREN'
    
_lr_action_items = {'INSTANCE_VAR':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[15,15,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,15,-28,-15,-22,-34,-16,-51,-36,15,-40,15,-43,-29,-44,-21,-47,-48,-41,-50,]),'GLOBAL_VAR':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[17,17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,17,-28,-15,-22,-34,-16,-51,-36,17,-40,17,-43,-29,-44,-21,-47,-48,-41,-50,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[18,18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,18,-28,-15,-22,-34,-16,-51,-36,18,-40,18,-43,-29,-44,-21,-47,-48,-41,-50,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[20,20,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,20,-28,-15,-22,-34,-16,-51,-36,20,-40,20,-43,-29,-44,-21,-47,-48,-41,-50,]),'P':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[21,21,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,21,-28,-15,-22,-34,-16,-51,-36,21,-40,21,-43,-29,-44,-21,-47,-48,-41,-50,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,18,20,21,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[19,19,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,43,48,49,-35,60,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,19,-28,-15,-22,-34,-16,-51,-36,19,-40,19,-43,-29,-44,-21,-47,-48,-41,-50,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[23,23,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,23,-28,-15,-22,-34,-16,-51,-36,23,-40,23,-43,-29,-44,-21,-47,-48,-41,-50,]),'CASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[24,24,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,24,-28,-15,-22,-34,-16,-51,-36,24,-40,24,-43,-29,-44,-21,-47,-48,-41,-50,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[25,25,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,25,-28,-15,-22,-34,-16,-51,-36,25,-40,25,-43,-29,-44,-21,-47,-48,-41,-50,]),'LBRACKET':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[27,27,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,27,-28,-15,-22,-34,-16,-51,-36,27,-40,27,-43,-29,-44,-21,-47,-48,-41,-50,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,22,25,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[26,26,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,59,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,26,-28,-15,-22,-34,-16,-51,-36,26,-40,26,-43,-29,-44,-21,-47,-48,-41,-50,]),'PLUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[28,28,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,28,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,28,-28,-15,-22,-34,-16,-51,-36,28,-40,28,-43,-29,-44,-21,-47,-48,-41,-50,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[29,29,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,29,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,29,-28,-15,-22,-34,-16,-51,-36,29,-40,29,-43,-29,-44,-21,-47,-48,-41,-50,]),'TIMES':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[30,30,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,30,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,30,-28,-15,-22,-34,-16,-51,-36,30,-40,30,-43,-29,-44,-21,-47,-48,-41,-50,]),'DIVIDE':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[31,31,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,31,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,31,-28,-15,-22,-34,-16,-51,-36,31,-40,31,-43,-29,-44,-21,-47,-48,-41,-50,]),'MOD':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,22,26,28,29,30,31,32,33,34,35,44,45,47,50,59,61,63,64,65,66,69,72,73,74,75,77,78,79,80,81,82,85,86,],[32,32,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,32,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-45,-20,-46,-49,32,-28,-15,-22,-34,-16,-51,-36,32,-40,32,-43,-29,-44,-21,-47,-48,-41,-50,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,58,59,61,63,64,65,66,68,69,72,73,74,75,77,78,79,80,81,82,85,86,],[33,33,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,33,33,33,33,-35,33,-42,33,-23,-24,-25,-26,-27,-17,-18,-19,33,33,33,-32,-33,33,33,-45,-20,-46,33,33,-49,33,-30,-31,33,33,-28,-15,-22,-34,-16,33,-51,-36,33,-40,33,-43,-29,-44,-21,-47,-48,-41,-50,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,58,59,61,63,64,65,66,68,69,72,73,74,75,77,78,79,80,81,82,85,86,],[34,34,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,34,34,34,34,-35,34,-42,34,-23,-24,-25,-26,-27,-17,-18,-19,34,34,34,-32,-33,34,34,-45,-20,-46,34,34,-49,34,-30,-31,34,34,-28,-15,-22,-34,-16,34,-51,-36,34,-40,34,-43,-29,-44,-21,-47,-48,-41,-50,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,58,59,61,63,64,65,66,68,69,72,73,74,75,77,78,79,80,81,82,85,86,],[35,35,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,35,35,35,35,-35,35,-42,35,-23,-24,-25,-26,-27,-17,-18,-19,35,35,35,-32,-33,35,35,-45,-20,-46,35,35,-49,35,-30,-31,35,35,-28,-15,-22,-34,-16,35,-51,-36,35,-40,35,-43,-29,-44,-21,-47,-48,-41,-50,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,36,44,45,47,50,61,63,64,65,66,69,72,74,77,78,79,80,81,82,85,86,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-3,-45,-20,-46,-49,-28,-15,-22,-34,-16,-51,-36,-40,-43,-29,-44,-21,-47,-48,-41,-50,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,22,26,28,29,30,31,32,33,34,35,36,44,45,47,50,56,57,61,63,64,65,66,69,72,74,76,77,78,79,80,81,82,83,84,85,86,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-35,-42,-23,-24,-25,-26,-27,-17,-18,-19,-3,-45,-20,-46,-49,74,-38,-28,-15,-22,-34,-16,-51,-36,-40,85,-43,-29,-44,-21,-47,-48,86,-37,-41,-50,]),'ASSIGN':([15,17,],[37,42,]),'LESSTHAN':([16,33,34,35,55,],[40,-17,-18,-19,40,]),'GREATERTHAN':([16,33,34,35,55,],[41,-17,-18,-19,41,]),'AND':([22,33,34,35,65,],[52,-17,-18,-19,-34,]),'OR':([22,33,34,35,65,],[53,-17,-18,-19,-34,]),'WHEN':([24,],[58,]),'RBRACKET':([27,33,34,35,45,62,80,],[61,-17,-18,-19,-20,78,-21,]),'COMMA':([33,34,35,45,],[-17,-18,-19,68,]),'RPAREN':([33,34,35,45,46,60,67,70,71,80,],[-17,-18,-19,-20,69,77,79,81,82,-21,]),'DO':([33,34,35,54,65,],[-17,-18,-19,73,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,3,59,73,75,],[2,36,76,83,84,]),'statement':([0,3,59,73,75,],[3,3,3,3,3,]),'assign':([0,3,59,73,75,],[4,4,4,4,4,]),'impression':([0,3,59,73,75,],[5,5,5,5,5,]),'tupla':([0,3,59,73,75,],[6,6,6,6,6,]),'conditions':([0,3,51,58,59,73,75,],[7,7,72,75,7,7,7,]),'while_loop':([0,3,59,73,75,],[8,8,8,8,8,]),'case':([0,3,59,73,75,],[9,9,9,9,9,]),'Sfunction':([0,3,59,73,75,],[10,10,10,10,10,]),'array':([0,3,59,73,75,],[11,11,11,11,11,]),'p_SfunctionINV':([0,3,59,73,75,],[12,12,12,12,12,]),'aritmeticExpresion':([0,3,59,73,75,],[13,13,13,13,13,]),'operator':([0,3,16,59,73,75,],[14,14,38,14,14,14,]),'value':([0,3,18,19,20,21,23,27,37,38,39,42,43,48,49,51,58,59,68,73,75,],[16,16,45,45,45,45,55,45,63,64,65,66,45,45,45,55,55,16,45,16,16,]),'condition':([0,3,23,51,58,59,73,75,],[22,22,54,22,22,22,22,22,]),'operComp':([16,55,],[39,39,]),'values':([18,19,20,21,27,43,48,49,68,],[44,46,47,50,62,67,70,71,80,]),'conector':([22,],[51,]),'whens':([24,],[56,]),'when':([24,],[57,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizador_sintactico.py',13),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizador_sintactico.py',16),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','analizador_sintactico.py',17),
  ('statement -> assign','statement',1,'p_statement','analizador_sintactico.py',20),
  ('statement -> impression','statement',1,'p_statement','analizador_sintactico.py',21),
  ('statement -> tupla','statement',1,'p_statement','analizador_sintactico.py',22),
  ('statement -> conditions','statement',1,'p_statement','analizador_sintactico.py',23),
  ('statement -> while_loop','statement',1,'p_statement','analizador_sintactico.py',24),
  ('statement -> case','statement',1,'p_statement','analizador_sintactico.py',25),
  ('statement -> Sfunction','statement',1,'p_statement','analizador_sintactico.py',26),
  ('statement -> array','statement',1,'p_statement','analizador_sintactico.py',27),
  ('statement -> p_SfunctionINV','statement',1,'p_statement','analizador_sintactico.py',28),
  ('statement -> aritmeticExpresion','statement',1,'p_statement','analizador_sintactico.py',29),
  ('statement -> operator','statement',1,'p_statement','analizador_sintactico.py',30),
  ('assign -> INSTANCE_VAR ASSIGN value','assign',3,'p_assign','analizador_sintactico.py',34),
  ('assign -> GLOBAL_VAR ASSIGN value','assign',3,'p_assign','analizador_sintactico.py',35),
  ('value -> NUMBER','value',1,'p_value','analizador_sintactico.py',39),
  ('value -> STRING','value',1,'p_value','analizador_sintactico.py',40),
  ('value -> BOOLEAN','value',1,'p_value','analizador_sintactico.py',41),
  ('values -> value','values',1,'p_values','analizador_sintactico.py',53),
  ('values -> value COMMA values','values',3,'p_values','analizador_sintactico.py',54),
  ('aritmeticExpresion -> value operator value','aritmeticExpresion',3,'p_aritmeticExpresion','analizador_sintactico.py',59),
  ('operator -> PLUS','operator',1,'p_operator','analizador_sintactico.py',63),
  ('operator -> MINUS','operator',1,'p_operator','analizador_sintactico.py',64),
  ('operator -> TIMES','operator',1,'p_operator','analizador_sintactico.py',65),
  ('operator -> DIVIDE','operator',1,'p_operator','analizador_sintactico.py',66),
  ('operator -> MOD','operator',1,'p_operator','analizador_sintactico.py',67),
  ('array -> LBRACKET RBRACKET','array',2,'p_emptyarray','analizador_sintactico.py',70),
  ('array -> LBRACKET values RBRACKET','array',3,'p_array','analizador_sintactico.py',73),
  ('conector -> AND','conector',1,'p_conector','analizador_sintactico.py',78),
  ('conector -> OR','conector',1,'p_conector','analizador_sintactico.py',79),
  ('operComp -> LESSTHAN','operComp',1,'p_operComp','analizador_sintactico.py',82),
  ('operComp -> GREATERTHAN','operComp',1,'p_operComp','analizador_sintactico.py',83),
  ('condition -> value operComp value','condition',3,'p_condition','analizador_sintactico.py',86),
  ('conditions -> condition','conditions',1,'p_conditions','analizador_sintactico.py',89),
  ('conditions -> condition conector conditions','conditions',3,'p_conditions','analizador_sintactico.py',90),
  ('when -> WHEN conditions statement_list','when',3,'p_when','analizador_sintactico.py',93),
  ('whens -> when','whens',1,'p_whens','analizador_sintactico.py',96),
  ('whens -> whens','whens',1,'p_whens','analizador_sintactico.py',97),
  ('case -> CASE whens END','case',3,'p_case','analizador_sintactico.py',100),
  ('Sfunction -> DEF ID statement_list END','Sfunction',4,'p_Sfunction','analizador_sintactico.py',105),
  ('p_SfunctionINV -> ID','p_SfunctionINV',1,'p_SfunctionINV','analizador_sintactico.py',108),
  ('p_SfunctionINV -> ID LPAREN RPAREN','p_SfunctionINV',3,'p_SfunctionINV','analizador_sintactico.py',109),
  ('impression -> PRINT LPAREN values RPAREN','impression',4,'p_impression','analizador_sintactico.py',116),
  ('impression -> PRINT values','impression',2,'p_impression','analizador_sintactico.py',117),
  ('impression -> PUTS values','impression',2,'p_impression','analizador_sintactico.py',118),
  ('impression -> PUTS LPAREN values RPAREN','impression',4,'p_impression','analizador_sintactico.py',119),
  ('impression -> P LPAREN values RPAREN','impression',4,'p_impression','analizador_sintactico.py',120),
  ('impression -> P values','impression',2,'p_impression','analizador_sintactico.py',121),
  ('while_loop -> WHILE condition DO statement_list END','while_loop',5,'p_while_loop','analizador_sintactico.py',129),
  ('tupla -> LPAREN values RPAREN','tupla',3,'p_tupla','analizador_sintactico.py',133),
]
