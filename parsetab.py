
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APOSTROPHE ASSIGN BOOLEAN BREAK CASE CLASS COMMA CONST DAPOSTROPHE DEF DIVIDE DO DOT ELSE ELSIF END EQUAL FALSE FOR GETS GLOBAL_VAR GREATEROREQUAL GREATERTHAN ID IF IN INSTANCE_VAR LBRACE LBRACKET LESSOREQUAL LESSTHAN LPAREN MINUS MOD NIL NONE NOT NOTEQUAL NUMBER OR P PLUS PRINT PUTS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE WHEN WHILEprogram : statement_liststatement_list : statement\n                      | statement statement_liststatement : assign\n                 | impression\n                 | tupla\n                 | conditions\n                 | while_loop\n                 | case\n                 | Sfunction\n                 | array\n                 | p_SfunctionINV\n                 | aritmeticExpresion\n                 | operator\n                 | dataIn\n                 assign : INSTANCE_VAR ASSIGN value\n              | GLOBAL_VAR ASSIGN value\n              | VARIABLE ASSIGN value\n              | VARIABLE ASSIGN data_structure\n              | INSTANCE_VAR ASSIGN data_structure\n              | GLOBAL_VAR ASSIGN data_structure\n              VARIABLE : IDvalue : NUMBER\n            |  STRING\n            |  BOOLEAN\n            | aritmeticExpresion\n            | conditions\n            values : value\n              | value COMMA valuesaritmeticExpresion : value operator value\n                          | LPAREN aritmeticExpresion RPAREN\n                          operator : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MODarray : LBRACKET RBRACKETarray : LBRACKET values RBRACKETdata_structure : array\n                      | tuplaconector : AND\n                | ORoperComp : LESSTHAN\n                | GREATERTHAN\n                condition : value operComp valueconditions : condition\n                  | condition conector conditionswhen : WHEN conditions statement_listwhens : when\n             | whenscase : CASE whens ENDSfunction : DEF ID statement_list ENDp_SfunctionINV : ID\n                      | ID LPAREN RPARENimpression : PRINT LPAREN values RPAREN\n                  | PRINT values\n                  | PUTS values\n                  | PUTS LPAREN values RPAREN\n                  | P LPAREN values RPAREN\n                  | P values\n                  | PRINT\n                  | PUTS\n                  dataIn : VARIABLE ASSIGN GETS\n              | INSTANCE_VAR ASSIGN GETS\n              | GLOBAL_VAR ASSIGN GETS while_loop : WHILE condition DO statement_list ENDtupla : LPAREN values RPARENtupla : LPAREN RPAREN'
    
_lr_action_items = {'INSTANCE_VAR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[16,16,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,16,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,16,-51,16,-54,-38,-55,-29,-58,-59,-52,-66,]),'GLOBAL_VAR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[18,18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,18,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,18,-51,18,-54,-38,-55,-29,-58,-59,-52,-66,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[20,20,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,20,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,20,-51,20,-54,-38,-55,-29,-58,-59,-52,-66,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[22,22,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,22,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,22,-51,22,-54,-38,-55,-29,-58,-59,-52,-66,]),'P':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[23,23,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,23,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,23,-51,23,-54,-38,-55,-29,-58,-59,-52,-66,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,60,61,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[21,21,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,46,51,56,57,-46,51,68,51,-32,-33,-34,-35,-36,-23,-24,-25,76,51,51,-43,-44,76,76,51,-56,-28,-26,-27,51,-68,-57,51,51,-60,51,-41,-42,51,21,-37,-16,-20,-64,-39,-40,51,-30,-45,-17,-21,-65,-18,-19,-63,51,-67,-31,-47,21,-51,21,-54,-38,-55,-29,-58,-59,-52,-66,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[25,25,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,25,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,25,-51,25,-54,-38,-55,-29,-58,-59,-52,-66,]),'CASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[26,26,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,26,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,26,-51,26,-54,-38,-55,-29,-58,-59,-52,-66,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[27,27,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,27,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,27,-51,27,-54,-38,-55,-29,-58,-59,-52,-66,]),'LBRACKET':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,39,44,45,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[29,29,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,29,29,29,-56,-28,-26,-27,-68,-57,-60,29,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,29,-51,29,-54,-38,-55,-29,-58,-59,-52,-66,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,27,28,30,31,32,33,34,35,36,37,47,48,49,50,53,55,58,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[28,28,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,67,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,-28,-26,-27,-68,-57,-60,28,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,28,-51,28,-54,-38,-55,-29,-58,-59,-52,-66,]),'PLUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,54,55,58,62,63,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,98,99,100,101,102,105,106,],[30,30,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,30,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,30,-26,-27,-68,-26,-57,-60,-46,30,30,-37,30,-20,-64,-39,-40,30,30,30,-21,-65,30,-19,-63,-67,-31,-27,30,-51,30,-54,-38,30,-55,-29,-58,-59,-52,-66,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,54,55,58,62,63,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,98,99,100,101,102,105,106,],[31,31,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,31,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,31,-26,-27,-68,-26,-57,-60,-46,31,31,-37,31,-20,-64,-39,-40,31,31,31,-21,-65,31,-19,-63,-67,-31,-27,31,-51,31,-54,-38,31,-55,-29,-58,-59,-52,-66,]),'TIMES':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,54,55,58,62,63,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,98,99,100,101,102,105,106,],[32,32,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,32,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,32,-26,-27,-68,-26,-57,-60,-46,32,32,-37,32,-20,-64,-39,-40,32,32,32,-21,-65,32,-19,-63,-67,-31,-27,32,-51,32,-54,-38,32,-55,-29,-58,-59,-52,-66,]),'DIVIDE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,54,55,58,62,63,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,98,99,100,101,102,105,106,],[33,33,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,33,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,33,-26,-27,-68,-26,-57,-60,-46,33,33,-37,33,-20,-64,-39,-40,33,33,33,-21,-65,33,-19,-63,-67,-31,-27,33,-51,33,-54,-38,33,-55,-29,-58,-59,-52,-66,]),'MOD':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,22,24,28,30,31,32,33,34,35,36,37,47,48,49,50,53,54,55,58,62,63,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,92,93,94,96,97,98,99,100,101,102,105,106,],[34,34,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,34,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-56,34,-26,-27,-68,-26,-57,-60,-46,34,34,-37,34,-20,-64,-39,-40,34,34,34,-21,-65,34,-19,-63,-67,-31,-27,34,-51,34,-54,-38,34,-55,-29,-58,-59,-52,-66,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,60,61,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[35,35,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,35,35,35,35,-46,35,-53,35,-32,-33,-34,-35,-36,-23,-24,-25,35,35,35,-43,-44,35,35,35,-56,-28,-26,-27,35,-68,-57,35,35,-60,35,-41,-42,35,35,-37,-16,-20,-64,-39,-40,35,-30,-45,-17,-21,-65,-18,-19,-63,35,-67,-31,-47,35,-51,35,-54,-38,-55,-29,-58,-59,-52,-66,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,60,61,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[36,36,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,36,36,36,36,-46,36,-53,36,-32,-33,-34,-35,-36,-23,-24,-25,36,36,36,-43,-44,36,36,36,-56,-28,-26,-27,36,-68,-57,36,36,-60,36,-41,-42,36,36,-37,-16,-20,-64,-39,-40,36,-30,-45,-17,-21,-65,-18,-19,-63,36,-67,-31,-47,36,-51,36,-54,-38,-55,-29,-58,-59,-52,-66,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,60,61,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,91,92,93,94,96,97,99,100,101,102,105,106,],[37,37,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,37,37,37,37,-46,37,-53,37,-32,-33,-34,-35,-36,-23,-24,-25,37,37,37,-43,-44,37,37,37,-56,-28,-26,-27,37,-68,-57,37,37,-60,37,-41,-42,37,37,-37,-16,-20,-64,-39,-40,37,-30,-45,-17,-21,-65,-18,-19,-63,37,-67,-31,-47,37,-51,37,-54,-38,-55,-29,-58,-59,-52,-66,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,38,47,48,49,50,53,55,58,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,93,96,97,99,100,101,102,105,106,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-3,-56,-28,-26,-27,-68,-57,-60,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,-51,-54,-38,-55,-29,-58,-59,-52,-66,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,20,22,24,28,30,31,32,33,34,35,36,37,38,47,48,49,50,53,55,58,64,65,69,71,72,73,74,75,77,78,79,80,81,82,83,84,87,88,91,93,95,96,97,99,100,101,102,103,104,105,106,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-61,-62,-46,-53,-32,-33,-34,-35,-36,-23,-24,-25,-3,-56,-28,-26,-27,-68,-57,-60,93,-49,-37,-16,-20,-64,-39,-40,-30,-45,-17,-21,-65,-18,-19,-63,-67,-31,-47,-51,105,-54,-38,-55,-29,-58,-59,106,-48,-52,-66,]),'LESSTHAN':([7,13,17,24,35,36,37,48,49,50,54,62,63,71,77,78,79,82,88,91,94,98,],[-27,-26,42,-46,-23,-24,-25,42,-26,-27,-26,-46,42,42,42,42,42,42,-31,-27,-27,42,]),'GREATERTHAN':([7,13,17,24,35,36,37,48,49,50,54,62,63,71,77,78,79,82,88,91,94,98,],[-27,-26,43,-46,-23,-24,-25,43,-26,-27,-26,-46,43,43,43,43,43,43,-31,-27,-27,43,]),'ASSIGN':([16,18,19,28,],[39,44,45,-22,]),'RPAREN':([21,24,35,36,37,48,49,50,52,54,68,76,77,78,85,88,89,90,91,98,100,],[53,-46,-23,-24,-25,-28,-26,-27,87,88,96,53,-30,-45,99,-31,101,102,-47,-28,-29,]),'COMMA':([24,35,36,37,48,49,50,54,77,78,88,91,98,],[-46,-23,-24,-25,86,-26,-27,-26,-30,-45,-31,-47,86,]),'RBRACKET':([24,29,35,36,37,48,49,50,70,77,78,88,91,100,],[-46,69,-23,-24,-25,-28,-26,-27,97,-30,-45,-31,-47,-29,]),'AND':([24,35,36,37,49,50,62,77,78,88,91,],[60,-23,-24,-25,-26,-27,60,-30,-45,-31,-47,]),'OR':([24,35,36,37,49,50,62,77,78,88,91,],[61,-23,-24,-25,-26,-27,61,-30,-45,-31,-47,]),'DO':([24,35,36,37,49,50,62,77,78,88,91,],[-46,-23,-24,-25,-26,-27,92,-30,-45,-31,-47,]),'WHEN':([26,],[66,]),'GETS':([39,44,45,],[73,81,84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,3,67,92,94,],[2,38,95,103,104,]),'statement':([0,3,67,92,94,],[3,3,3,3,3,]),'assign':([0,3,67,92,94,],[4,4,4,4,4,]),'impression':([0,3,67,92,94,],[5,5,5,5,5,]),'tupla':([0,3,39,44,45,67,92,94,],[6,6,75,75,75,6,6,6,]),'conditions':([0,3,20,21,22,23,25,29,39,40,41,44,45,46,51,56,57,59,66,67,76,86,92,94,],[7,7,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,91,94,7,50,50,7,7,]),'while_loop':([0,3,67,92,94,],[8,8,8,8,8,]),'case':([0,3,67,92,94,],[9,9,9,9,9,]),'Sfunction':([0,3,67,92,94,],[10,10,10,10,10,]),'array':([0,3,39,44,45,67,92,94,],[11,11,74,74,74,11,11,11,]),'p_SfunctionINV':([0,3,67,92,94,],[12,12,12,12,12,]),'aritmeticExpresion':([0,3,20,21,22,23,25,29,39,40,41,44,45,46,51,56,57,59,66,67,76,86,92,94,],[13,13,49,54,49,49,49,49,49,49,49,49,49,54,54,54,54,49,49,13,54,49,13,13,]),'operator':([0,3,17,48,63,67,71,77,78,79,82,92,94,98,],[14,14,40,40,40,14,40,40,40,40,40,14,14,40,]),'dataIn':([0,3,67,92,94,],[15,15,15,15,15,]),'value':([0,3,20,21,22,23,25,29,39,40,41,44,45,46,51,56,57,59,66,67,76,86,92,94,],[17,17,48,48,48,48,63,48,71,77,78,79,82,48,17,48,48,63,63,17,98,48,17,17,]),'VARIABLE':([0,3,67,92,94,],[19,19,19,19,19,]),'condition':([0,3,20,21,22,23,25,29,39,40,41,44,45,46,51,56,57,59,66,67,76,86,92,94,],[24,24,24,24,24,24,62,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'operComp':([17,48,63,71,77,78,79,82,98,],[41,41,41,41,41,41,41,41,41,]),'values':([20,21,22,23,29,46,56,57,76,86,],[47,52,55,58,70,85,89,90,52,100,]),'conector':([24,62,],[59,59,]),'whens':([26,],[64,]),'when':([26,],[65,]),'data_structure':([39,44,45,],[72,80,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizador_sintactico.py',10),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizador_sintactico.py',13),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','analizador_sintactico.py',14),
  ('statement -> assign','statement',1,'p_statement','analizador_sintactico.py',17),
  ('statement -> impression','statement',1,'p_statement','analizador_sintactico.py',18),
  ('statement -> tupla','statement',1,'p_statement','analizador_sintactico.py',19),
  ('statement -> conditions','statement',1,'p_statement','analizador_sintactico.py',20),
  ('statement -> while_loop','statement',1,'p_statement','analizador_sintactico.py',21),
  ('statement -> case','statement',1,'p_statement','analizador_sintactico.py',22),
  ('statement -> Sfunction','statement',1,'p_statement','analizador_sintactico.py',23),
  ('statement -> array','statement',1,'p_statement','analizador_sintactico.py',24),
  ('statement -> p_SfunctionINV','statement',1,'p_statement','analizador_sintactico.py',25),
  ('statement -> aritmeticExpresion','statement',1,'p_statement','analizador_sintactico.py',26),
  ('statement -> operator','statement',1,'p_statement','analizador_sintactico.py',27),
  ('statement -> dataIn','statement',1,'p_statement','analizador_sintactico.py',28),
  ('assign -> INSTANCE_VAR ASSIGN value','assign',3,'p_assign','analizador_sintactico.py',32),
  ('assign -> GLOBAL_VAR ASSIGN value','assign',3,'p_assign','analizador_sintactico.py',33),
  ('assign -> VARIABLE ASSIGN value','assign',3,'p_assign','analizador_sintactico.py',34),
  ('assign -> VARIABLE ASSIGN data_structure','assign',3,'p_assign','analizador_sintactico.py',35),
  ('assign -> INSTANCE_VAR ASSIGN data_structure','assign',3,'p_assign','analizador_sintactico.py',36),
  ('assign -> GLOBAL_VAR ASSIGN data_structure','assign',3,'p_assign','analizador_sintactico.py',37),
  ('VARIABLE -> ID','VARIABLE',1,'p_VARIABLE','analizador_sintactico.py',41),
  ('value -> NUMBER','value',1,'p_value','analizador_sintactico.py',44),
  ('value -> STRING','value',1,'p_value','analizador_sintactico.py',45),
  ('value -> BOOLEAN','value',1,'p_value','analizador_sintactico.py',46),
  ('value -> aritmeticExpresion','value',1,'p_value','analizador_sintactico.py',47),
  ('value -> conditions','value',1,'p_value','analizador_sintactico.py',48),
  ('values -> value','values',1,'p_values','analizador_sintactico.py',52),
  ('values -> value COMMA values','values',3,'p_values','analizador_sintactico.py',53),
  ('aritmeticExpresion -> value operator value','aritmeticExpresion',3,'p_aritmeticExpresion','analizador_sintactico.py',57),
  ('aritmeticExpresion -> LPAREN aritmeticExpresion RPAREN','aritmeticExpresion',3,'p_aritmeticExpresion','analizador_sintactico.py',58),
  ('operator -> PLUS','operator',1,'p_operator','analizador_sintactico.py',62),
  ('operator -> MINUS','operator',1,'p_operator','analizador_sintactico.py',63),
  ('operator -> TIMES','operator',1,'p_operator','analizador_sintactico.py',64),
  ('operator -> DIVIDE','operator',1,'p_operator','analizador_sintactico.py',65),
  ('operator -> MOD','operator',1,'p_operator','analizador_sintactico.py',66),
  ('array -> LBRACKET RBRACKET','array',2,'p_emptyarray','analizador_sintactico.py',69),
  ('array -> LBRACKET values RBRACKET','array',3,'p_array','analizador_sintactico.py',72),
  ('data_structure -> array','data_structure',1,'p_data_structure','analizador_sintactico.py',75),
  ('data_structure -> tupla','data_structure',1,'p_data_structure','analizador_sintactico.py',76),
  ('conector -> AND','conector',1,'p_conector','analizador_sintactico.py',81),
  ('conector -> OR','conector',1,'p_conector','analizador_sintactico.py',82),
  ('operComp -> LESSTHAN','operComp',1,'p_operComp','analizador_sintactico.py',85),
  ('operComp -> GREATERTHAN','operComp',1,'p_operComp','analizador_sintactico.py',86),
  ('condition -> value operComp value','condition',3,'p_condition','analizador_sintactico.py',90),
  ('conditions -> condition','conditions',1,'p_conditions','analizador_sintactico.py',93),
  ('conditions -> condition conector conditions','conditions',3,'p_conditions','analizador_sintactico.py',94),
  ('when -> WHEN conditions statement_list','when',3,'p_when','analizador_sintactico.py',97),
  ('whens -> when','whens',1,'p_whens','analizador_sintactico.py',100),
  ('whens -> whens','whens',1,'p_whens','analizador_sintactico.py',101),
  ('case -> CASE whens END','case',3,'p_case','analizador_sintactico.py',104),
  ('Sfunction -> DEF ID statement_list END','Sfunction',4,'p_Sfunction','analizador_sintactico.py',109),
  ('p_SfunctionINV -> ID','p_SfunctionINV',1,'p_SfunctionINV','analizador_sintactico.py',112),
  ('p_SfunctionINV -> ID LPAREN RPAREN','p_SfunctionINV',3,'p_SfunctionINV','analizador_sintactico.py',113),
  ('impression -> PRINT LPAREN values RPAREN','impression',4,'p_impression','analizador_sintactico.py',120),
  ('impression -> PRINT values','impression',2,'p_impression','analizador_sintactico.py',121),
  ('impression -> PUTS values','impression',2,'p_impression','analizador_sintactico.py',122),
  ('impression -> PUTS LPAREN values RPAREN','impression',4,'p_impression','analizador_sintactico.py',123),
  ('impression -> P LPAREN values RPAREN','impression',4,'p_impression','analizador_sintactico.py',124),
  ('impression -> P values','impression',2,'p_impression','analizador_sintactico.py',125),
  ('impression -> PRINT','impression',1,'p_impression','analizador_sintactico.py',126),
  ('impression -> PUTS','impression',1,'p_impression','analizador_sintactico.py',127),
  ('dataIn -> VARIABLE ASSIGN GETS','dataIn',3,'p_dataIn','analizador_sintactico.py',133),
  ('dataIn -> INSTANCE_VAR ASSIGN GETS','dataIn',3,'p_dataIn','analizador_sintactico.py',134),
  ('dataIn -> GLOBAL_VAR ASSIGN GETS','dataIn',3,'p_dataIn','analizador_sintactico.py',135),
  ('while_loop -> WHILE condition DO statement_list END','while_loop',5,'p_while_loop','analizador_sintactico.py',139),
  ('tupla -> LPAREN values RPAREN','tupla',3,'p_tupla','analizador_sintactico.py',143),
  ('tupla -> LPAREN RPAREN','tupla',2,'p_emptytupla','analizador_sintactico.py',146),
]
